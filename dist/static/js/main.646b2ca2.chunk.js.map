{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducers.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","console","log","links","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","deleteProject","getFirestore","doc","delete","catch","err","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","error","SignUp","firstname","lastname","signUp","newUser","createUserWithEmailAndPassword","resp","set","firstName","lastName","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.646b2ca2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/create-project\">New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={props.signOut}>Log Out</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase} ) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email, \r\n            credentials.password\r\n            ).then(()=> {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((error)=> {\r\n            dispatch(\r\n                { type: 'LOGIN_ERROR', error }\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=> {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(()=> {\r\n            dispatch(\r\n                    { type: 'SIGNUP_SUCCESS' }\r\n                )\r\n        }).catch((err) => {\r\n            dispatch(\r\n                    { type: 'SIGNUP_ERROR', err }\r\n                )\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Sign Up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Log In</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">\r\n                    Super Plan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notification = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"> Notifications  </span>\r\n                        <ul className=\"notification\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id} >\r\n                                    <span className=\"pink-text\">\r\n                                        {item.user}  \r\n                                    </span>\r\n                                    <span>\r\n                                        {item.content}\r\n                                    </span>\r\n                                    <div className=\"grey-text note-date\" >\r\n                                    {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                        </ul>\r\n                  \r\n            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n              <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">\r\n                            {project.title}\r\n                    </span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n\r\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n                )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id} >\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notification from './Notification'\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                  <ProjectList projects={projects} />\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notification notifications={notifications} />\r\n                </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit : 3, orderBy: ['time', 'desc']}\r\n  ])\r\n) (Dashboard)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport  { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport  { deleteProject } from '../../store/actions/projectActions';\r\n\r\n\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n//    const handleDelete = e => {\r\n//         const { id } = this.props;\r\n//         e.preventDefault();\r\n//         this.props.deleteProject(id);\r\n//         // you can push to dashboard after deleting...\r\n//     }\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n    if(project) {\r\n        \r\n        return(\r\n   <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>{project.content}</p>\r\n                    <div className=\"card-action grey lighten-4 grey-text\" >\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                    {/* <button onClick={this.handleDelete}>Delete</button> */}\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n     \r\n    }\r\n    else {\r\n        return (\r\n                <div className=\"container center\">\r\n                    <p>Loading project...</p>\r\n                </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state);\r\n    \r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        id: id,\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDistpacthToProps = dispatch => {\r\n    return {\r\n        deleteProject: (id) => dispatch(deleteProject(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDistpacthToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);\r\n","export const createProject = (project) => {\r\n    // because we are using thunk, we can put a function instead of usual switch\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add(\r\n            { ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n            }\r\n        ).then(\r\n            () => {\r\n                dispatch({type: 'CREATE_PROJECT', project });\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n                dispatch(\r\n                    { type: 'CREATE_PROJECT_ERROR', err }\r\n                )\r\n            })\r\n        \r\n    }\r\n};\r\n\r\nexport const deleteProject = id => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n      const firestore = getFirestore();\r\n      \r\n      firestore.collection('projects').doc(id)\r\n        .delete()\r\n        .then(() => {\r\n          dispatch({ type: 'DELETE_PROJECT', id })\r\n        }).catch(err => {\r\n          dispatch({ type: 'DELETE_PROJECT_ERROR', err })\r\n      })\r\n    }\r\n  };","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange=(e)=>{\r\n       this.setState({\r\n        [e.target.id]: e.target.value\r\n       })\r\n    }\r\n    handleSubmit=(e)=>{\r\n      e.preventDefault();\r\n    this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\" >Login</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p>: null}\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return { signIn:  (creds) => dispatch(signIn(creds)) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignIn)\r\n\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: '',\r\n    }\r\n    handleChange=(e)=>{\r\n       this.setState({\r\n        [e.target.id]: e.target.value\r\n       })\r\n    }\r\n    handleSubmit=(e)=>{\r\n      e.preventDefault();\r\n      this.props.signUp(this.state);\r\n      \r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-1\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input  type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\" >Sign Up</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p>: null}\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp) \r\n","import React, {Component} from 'react';\r\nimport { createProject } from '../../store/actions/projectActions';    \r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">\r\n                        Project Content</label>\r\n                    <textarea\r\n                        className=\"materialize-textarea\"\r\n                        id=\"content\"\r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps) (CreateProject)\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n     <Navbar />\n     <Switch>\n       <Route exact  path=\"/\" component={Dashboard} />\n       <Route path=\"/project/:id\" component={ProjectDetails} />\n       <Route path=\"/signin\" component={SignIn} />\n       <Route path=\"/signup\" component={SignUp} />\n       <Route path=\"/create-project\" component={CreateProject} />\n     </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    authError: null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action)  => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return { \r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sign out success');\r\n            return {\r\n                state\r\n            }\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('sign up success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('sign up failure');\r\n            return { \r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n    projects: [\r\n        {\r\n            'id': 1,\r\n            'title': 'find nimo',\r\n            'content': 'blag blah'\r\n        }, {\r\n            'id': 2,\r\n            'title': 'find mimi',\r\n            'content': 'blag blah'\r\n        }, {\r\n            'id': 3,\r\n            'title': 'find  momo',\r\n            'content': 'blag blah'\r\n        }\r\n    ]\r\n};\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Project created', action.type);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.type);\r\n            return state;\r\n        case 'DELETE_PROJECT':\r\n            console.log('delete project');\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log('delete project error', 'state: ', state, 'action: ', action.project);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore:  firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDDc5rK7JJ6drAFjHTA4E0t8ugOuO2_sQE\",\r\n    authDomain: \"superplan-536dc.firebaseapp.com\",\r\n    databaseURL: \"https://superplan-536dc.firebaseio.com\",\r\n    projectId: \"superplan-536dc\",\r\n    storageBucket: \"superplan-536dc.appspot.com\",\r\n    messagingSenderId: \"705227926016\",\r\n    appId: \"1:705227926016:web:5f17026ab572a81cc1c6e5\",\r\n    measurementId: \"G-P5GQX25N8D\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n//   firebase.analytics();\r\n  // to update data store\r\n  firebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport  rootReducer from './store/reducers/rootReducers';\nimport { Provider } from 'react-redux';\nimport  thunk  from 'redux-thunk';\n// add store enhancer  reactReduxFirebase, reduxFirestore\nimport { ReactReduxFirebaseProvider, getFirebase } from  'react-redux-firebase';\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport fbConfig from './config/fbconfig';\nimport firebase from 'firebase/app';\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\n\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\n\n\n\n\nconst rrfProps = {\n  firebase,\n  // config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className=\"center\"> <p>Loading Super Plan...</p></div>;\n      return children\n}\n\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n      <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n\nserviceWorker.unregister();"],"sourceRoot":""}